{"version":3,"sources":["utils/API.js","components/Result.js","pages/Search.js","components/Navbar.js","pages/Saved.js","components/Jumbotron.js","components/Alert.js","App.js","index.js"],"names":["APIKEY","process","REACT_APP_KEY","getBooks","axios","get","response","data","console","log","searchBooks","search","totalItems","savedBooks","books","items","filter","item","some","e","link","id","map","element","title","volumeInfo","subtitle","author","authors","thumbnail","imageLinks","description","saveBook","book","post","deleteBook","delete","Result","buttonClick","type","className","onClick","href","rel","target","join","src","alt","socket","io","Search","useState","setBooks","searchValue","setSearchValue","event","a","preventDefault","API","handleSave","emit","placeholder","onChange","value","undefined","Nav","Saved","handleDelete","_id","useEffect","length","Jumbotron","children","style","height","clear","paddingTop","textAlign","Alert","alert","role","aria-label","aria-hidden","App","setAlert","on","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b54a439b.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Define google book api constants\nconst APIKEY = process.env.REACT_APP_KEY;\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nconst maxResults = \"&maxResults=20\";\n\nexport default {\n  // Get all books\n  async getBooks() {\n    try {\n      const response = await axios.get(\"/api/books\");\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  },\n  // Search google api with search value\n  async searchBooks(search) {\n    try {\n      const response = await axios.get(`${BASEURL}${search}&key=${APIKEY}${maxResults}`);\n      // If no results are found then return false\n      if (response.data.totalItems === 0) {\n        return false;\n      }\n\n      // Get current list of saved books\n      const savedBooks = await this.getBooks();\n\n      // Filter search results for any books saved and map select data into a new object\n      const books = response.data.items\n        .filter((item) => !savedBooks\n          .some((e) => e.link === item.id))\n        .map((element) => ({\n          link: element.id,\n          title: element.volumeInfo.title,\n          subtitle: element.volumeInfo.subtitle,\n          author: element.volumeInfo.authors,\n          thumbnail: element.volumeInfo.imageLinks.thumbnail,\n          description: element.volumeInfo.description,\n        }));\n      // console.log(books);\n      return books;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  },\n  // Saves a book to the database\n  async saveBook(book) {\n    try {\n      const response = await axios.post(\"/api/books\", (book));\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  },\n  // Deletes the book with the given id\n  async deleteBook(id) {\n    try {\n      const response = await axios.delete(`/api/books/${id}`);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  },\n};\n","import React from \"react\";\n\n// Main result container to display search results and saved books\nfunction Result({ book, buttonClick, type }) {\n  // Destructure our book object\n  const {\n    title, subtitle, link, author, thumbnail, description,\n  } = book;\n\n  return (\n    // Display book title\n    <div id=\"results\" className=\"card-body border\">\n      <h4 className=\"card-title\">{title}</h4>\n\n      {/* Display save or delete button depending on type and click handler passed */}\n      <button type=\"button\" className=\"btn btn-primary float-right\" onClick={() => buttonClick(book)}>{type}</button>\n\n      {/* Anchor element to visit the book's store page */}\n      <a className=\"btn btn-info float-right\" href={`https://play.google.com/store/books/details?id=${link}`} rel=\"noreferrer\" target=\"_blank\">VIEW</a>\n\n      {/* If there is a subtitle then display it */}\n      {subtitle ? <h5 className=\"card-subtitle mb-2 text-muted\">{subtitle}</h5> : null}\n\n      {/* Display all authors from the array */}\n      <h5 className=\"card-subtitle mb-2 text-muted\">\n        Written By:\n        {\" \"}\n        {author.join(\", \")}\n      </h5>\n\n      {/* Display book image and description */}\n      <div className=\"resultsBlock\">\n        <div className=\"resultsImgBlock\">\n          <img className=\"resultsImg\" src={thumbnail} alt=\"book cover\" />\n        </div>\n        <h5 className=\"card-text resultsDesc\">{description}</h5>\n      </div>\n    </div>\n  );\n}\n\n// Export component\nexport default Result;\n","import React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport API from \"../utils/API\";\nimport Result from \"../components/Result\";\n\nconst socket = io();\n\nfunction Search() {\n  // Track search value and search results\n  const [books, setBooks] = useState();\n  const [searchValue, setSearchValue] = useState();\n\n  // Tracking value of input box\n  function handleInputChange(event) {\n    const { value } = event.target;\n    setSearchValue(value);\n  }\n\n  // Handles form submission\n  async function handleSubmit(event) {\n    event.preventDefault();\n    // Check if search value is null\n    if (!searchValue) {\n      console.log(\"Search value is empty\");\n      return;\n    }\n    // Set books to the search results returned\n    setBooks(await API.searchBooks(searchValue));\n  }\n\n  // Handles saving a book to database\n  async function handleSave(book) {\n    await API.saveBook(book);\n    // Change the book state so it rerenders and selected book is removed\n    setBooks(books.filter((element) => element !== book));\n    // Emit a message to all other connected clients what book was saved\n    socket.emit(\"saved\", book);\n  }\n\n  // Check the status of books state\n  function checkBooks() {\n    // On first page load, it will be null\n    if (books === undefined) {\n      return <h4 className=\"searchBegin\">Search For A Book To Begin!</h4>;\n    }\n    // If no search results are found\n    if (books === false) {\n      return <h4 className=\"searchBegin\">No Results Found</h4>;\n    }\n    // If results are found then create a result component for each item\n    // Pass in the search item and click handler for saving\n    return books.map((element) => (\n      <Result key={element.link} book={element} buttonClick={handleSave} type=\"SAVE\" />\n    ));\n  }\n\n  // Render our search page\n  return (\n    <>\n      {/* Display a form with input box and submit button */}\n      <form className=\"form-group\">\n        <h2>\n          <i className=\"fas fa-book\" />\n          Book Search\n        </h2>\n        <input className=\"form-control\" placeholder=\"Type book details...\" onChange={handleInputChange} />\n        <button className=\"btn btn-success\" type=\"submit\" onClick={handleSubmit}>Search</button>\n      </form>\n\n      {/* Results portion of the page rendered after using the google books api */}\n      <h3>Results</h3>\n      {checkBooks()}\n    </>\n  );\n}\n\n// Export component\nexport default Search;\n","import React from \"react\";\n\n// Header component with links going to homepage and saved pages\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <a className=\"navbar-brand\" href=\"/search\">\n        <small>Search</small>\n      </a>\n      <a className=\"navbar-brand\" href=\"/saved\">\n        <small>Saved</small>\n      </a>\n    </nav>\n  );\n}\n\n// Export component\nexport default Nav;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport Result from \"../components/Result\";\n\nfunction Saved() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n\n  // Load all books and store them with setBooks\n  useEffect(async () => {\n    setBooks(await API.getBooks());\n  }, []);\n\n  async function handleDelete(book) {\n    await API.deleteBook(book._id);\n    setBooks(books.filter((element) => element !== book));\n  }\n\n  // Renders our saved page. Similar idea as the search page\n  return (\n    <>\n      <h3>\n        <i className=\"fas fa-download\" />\n        Saved Books\n      </h3>\n      {/* If there are books to display then create a result component for each item */}\n      {books.length ? (books.map((element) => (\n        <Result\n          key={element.link}\n          book={element}\n          buttonClick={handleDelete}\n          type=\"DELETE\"\n        />\n      ))\n      ) : (\n        <h4 className=\"searchBegin\">No Saved Books</h4>\n      )}\n    </>\n  );\n}\n\n// Export component\nexport default Saved;\n","import React from \"react\";\n\n// Jumbotron component displaying any props.children passed in\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\",\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Export component\nexport default Jumbotron;\n","import React from \"react\";\n\n// Alert component to display when a book has been saved. Takes the book object\nfunction Alert({ alert, buttonClick }) {\n  return (\n    // Simple bootstrap message with the book's google store link\n    <div className=\"alert alert-success\" role=\"alert\">\n      Your book\n      {\" \"}\n      <a href={`https://play.google.com/store/books/details?id=${alert.link}`} rel=\"noreferrer\" target=\"_blank\" className=\"alert-link\">{alert.title}</a>\n      {\" \"}\n      has been saved! Give it a click if you like.\n      {/* Close button */}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={buttonClick}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n\n// Export component\nexport default Alert;\n","/* eslint-disable no-alert */\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Search from \"./pages/Search\";\nimport Nav from \"./components/Navbar\";\nimport Saved from \"./pages/Saved\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Alert from \"./components/Alert\";\n\nconst socket = io();\n\nfunction App() {\n  // Track any alerts emitted by socketio\n  const [alert, setAlert] = useState();\n\n  // Handle an emitted message called saved and emit book details\n  useEffect(() => {\n    socket.on(\"saved\", (data) => {\n      setAlert(data);\n    });\n  });\n\n  // Set alert to null to dismount the component on click\n  function closeAlert() {\n    setAlert(null);\n  }\n\n  return (\n    <BrowserRouter>\n      {/* Nav and Jumbotron are always visible */}\n      <Nav />\n      <Jumbotron>\n        <h1>(React) Google Books Search</h1>\n        <h3>Search for and Save Books of Interest</h3>\n      </Jumbotron>\n      {/* Display alerts if there is an alert state */}\n      {alert ? (<Alert alert={alert} buttonClick={closeAlert} />) : null}\n      {/* Setting up routing with two pages Saved and Search */}\n      <Switch>\n        <Route exact path={[\"/\", \"/search\"]}>\n          <Search />\n        </Route>\n        <Route exact path=\"/saved\">\n          <Saved />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}